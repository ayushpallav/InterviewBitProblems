int min(int a,int b)
{
    if(a<b)
        return a;
    return b;
}
int max(int a,int b)
{
    if(a>b)
        return a;
    return b;
}
int Solution::maxcoin(vector<int> &A) 
{   
    int n = A.size(),a,b,j;
    int dp[n][n];
    for(int i=0;i<n;i++)
        dp[i][i] = A[i];
    for(int L=2;L<=n;L++)
    {
        for(int i=0;i<n-L+1;i++)
        {
            j = i+L-1;
            a = dp[i][j-1];
            b = dp[i+1][j];
            if(L==2)
                dp[i][j] = max(a,b);
            else
            {
                if(a>b)
                    dp[i][j] = A[i] + min(dp[i+1][j-1],dp[i+2][j]);
                else
                    dp[i][j] = A[j] + min(dp[i][j-2],dp[i+1][j-1]);
            }
        }
    }
    /*for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
            cout<<dp[i][j]<<" ";
        cout<<endl;
    }*/
    return dp[0][n-1];
}
